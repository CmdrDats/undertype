;; Analyzed by ClojureScript 0.0-3211
{:use-macros nil, :excludes #{}, :name om-tut.core, :imports nil, :requires {goog.string.format goog.string.format, gstring goog.string, goog.string goog.string, rng cemerick.pprng, cemerick.pprng cemerick.pprng, dom om.dom, om.dom om.dom, om.core om.core, om om.core}, :uses nil, :defs {sounds {:meta {:end-column 12, :end-line 174, :column 6, :line 174, :file "/Users/cmdrdats/storage/exp/om-tut/src/om_tut/core.cljs"}, :file "src/om_tut/core.cljs", :line 174, :column 1, :end-line 174, :end-column 12, :test true, :name om-tut.core/sounds}, letter-profiles {:meta {:end-column 18, :end-line 59, :column 3, :line 59, :file "/Users/cmdrdats/storage/exp/om-tut/src/om_tut/core.cljs"}, :file "src/om_tut/core.cljs", :line 58, :column 1, :end-line 59, :end-column 18, :test true, :name om-tut.core/letter-profiles}, keydown-listener {:protocol-inline nil, :meta {:arglists (quote ([e])), :end-column 23, :end-line 246, :column 7, :line 246, :file "/Users/cmdrdats/storage/exp/om-tut/src/om_tut/core.cljs"}, :name om-tut.core/keydown-listener, :variadic false, :file "src/om_tut/core.cljs", :end-column 23, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 246, :end-line 246, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e])), :test true}, keypress-listener {:protocol-inline nil, :meta {:arglists (quote ([e])), :end-column 24, :end-line 218, :column 7, :line 218, :file "/Users/cmdrdats/storage/exp/om-tut/src/om_tut/core.cljs"}, :name om-tut.core/keypress-listener, :variadic false, :file "src/om_tut/core.cljs", :end-column 24, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 218, :end-line 218, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e])), :test true}, ->t30599 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([owner block block-view meta30600])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name om-tut.core/->t30599, :variadic false, :file "src/om_tut/core.cljs", :method-params ([owner block block-view meta30600]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 87, :max-fixed-arity 4, :fn-var true, :arglists (quote ([owner block block-view meta30600])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, t30599 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name om-tut.core/t30599, :file "src/om_tut/core.cljs", :type true, :anonymous true, :column 3, :line 87, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, copy-all {:protocol-inline nil, :meta {:arglists (quote ([data])), :end-column 15, :end-line 111, :column 7, :line 111, :file "/Users/cmdrdats/storage/exp/om-tut/src/om_tut/core.cljs"}, :name om-tut.core/copy-all, :variadic false, :file "src/om_tut/core.cljs", :end-column 15, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 111, :end-line 111, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data])), :test true}, set-tabstop {:protocol-inline nil, :meta {:arglists (quote ([state])), :end-column 18, :end-line 230, :column 7, :line 230, :file "/Users/cmdrdats/storage/exp/om-tut/src/om_tut/core.cljs"}, :name om-tut.core/set-tabstop, :variadic false, :file "src/om_tut/core.cljs", :end-column 18, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 230, :end-line 230, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state])), :test true}, play-key {:protocol-inline nil, :meta {:arglists (quote ([keycode])), :end-column 15, :end-line 188, :column 7, :line 188, :file "/Users/cmdrdats/storage/exp/om-tut/src/om_tut/core.cljs"}, :name om-tut.core/play-key, :variadic false, :file "src/om_tut/core.cljs", :end-column 15, :method-params ([keycode]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 188, :end-line 188, :max-fixed-arity 1, :fn-var true, :arglists (quote ([keycode])), :test true}, ->t30620 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([owner data copy-button meta30621])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name om-tut.core/->t30620, :variadic false, :file "src/om_tut/core.cljs", :method-params ([owner data copy-button meta30621]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 115, :max-fixed-arity 4, :fn-var true, :arglists (quote ([owner data copy-button meta30621])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, play-sound {:protocol-inline nil, :meta {:arglists (quote ([type])), :end-column 17, :end-line 183, :column 7, :line 183, :file "/Users/cmdrdats/storage/exp/om-tut/src/om_tut/core.cljs"}, :name om-tut.core/play-sound, :variadic false, :file "src/om_tut/core.cljs", :end-column 17, :method-params ([type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 183, :end-line 183, :max-fixed-arity 1, :fn-var true, :arglists (quote ([type])), :test true}, t30620 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name om-tut.core/t30620, :file "src/om_tut/core.cljs", :type true, :anonymous true, :column 3, :line 115, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, page-view {:protocol-inline nil, :meta {:arglists (quote ([data owner])), :end-column 16, :end-line 95, :column 7, :line 95, :file "/Users/cmdrdats/storage/exp/om-tut/src/om_tut/core.cljs"}, :name om-tut.core/page-view, :variadic false, :file "src/om_tut/core.cljs", :end-column 16, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner])), :test true}, letter {:protocol-inline nil, :meta {:arglists (quote ([[text [x y] [stop sleft sopacity ltop lopacity]]])), :end-column 13, :end-line 71, :column 7, :line 71, :file "/Users/cmdrdats/storage/exp/om-tut/src/om_tut/core.cljs"}, :name om-tut.core/letter, :variadic false, :file "src/om_tut/core.cljs", :end-column 13, :method-params ([p__30592]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[text [x y] [stop sleft sopacity ltop lopacity]]])), :test true}, create-letter {:protocol-inline nil, :meta {:arglists (quote ([l pos])), :end-column 20, :end-line 68, :column 7, :line 68, :file "/Users/cmdrdats/storage/exp/om-tut/src/om_tut/core.cljs"}, :name om-tut.core/create-letter, :variadic false, :file "src/om_tut/core.cljs", :end-column 20, :method-params ([l pos]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 2, :fn-var true, :arglists (quote ([l pos])), :test true}, t30626 {:num-fields 3, :protocols #{om.core/IRenderState cljs.core/IMeta cljs.core/IWithMeta}, :name om-tut.core/t30626, :file "src/om_tut/core.cljs", :type true, :anonymous true, :column 5, :line 135, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, move {:protocol-inline nil, :meta {:arglists (quote ([state dx dy])), :end-column 11, :end-line 203, :column 7, :line 203, :file "/Users/cmdrdats/storage/exp/om-tut/src/om_tut/core.cljs"}, :name om-tut.core/move, :variadic false, :file "src/om_tut/core.cljs", :end-column 11, :method-params ([state dx dy]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 203, :end-line 203, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state dx dy])), :test true}, snd {:protocol-inline nil, :meta {:arglists (quote ([n])), :end-column 10, :end-line 171, :column 7, :line 171, :file "/Users/cmdrdats/storage/exp/om-tut/src/om_tut/core.cljs"}, :name om-tut.core/snd, :variadic false, :file "src/om_tut/core.cljs", :end-column 10, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 171, :end-line 171, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n])), :test true}, copy-button {:protocol-inline nil, :meta {:arglists (quote ([data owner])), :end-column 18, :end-line 114, :column 7, :line 114, :file "/Users/cmdrdats/storage/exp/om-tut/src/om_tut/core.cljs"}, :name om-tut.core/copy-button, :variadic false, :file "src/om_tut/core.cljs", :end-column 18, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 114, :end-line 114, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner])), :test true}, ->t30602 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([owner block block-view meta30603])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name om-tut.core/->t30602, :variadic false, :file "src/om_tut/core.cljs", :method-params ([owner block block-view meta30603]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 87, :max-fixed-arity 4, :fn-var true, :arglists (quote ([owner block block-view meta30603])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, s {:meta {:end-column 11, :end-line 277, :column 10, :line 277, :file "/Users/cmdrdats/storage/exp/om-tut/src/om_tut/core.cljs"}, :file "src/om_tut/core.cljs", :line 277, :column 1, :end-line 277, :end-column 11, :test true, :name om-tut.core/s}, t30617 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name om-tut.core/t30617, :file "src/om_tut/core.cljs", :type true, :anonymous true, :column 3, :line 115, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t30611 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name om-tut.core/t30611, :file "src/om_tut/core.cljs", :type true, :anonymous true, :column 3, :line 96, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t30605 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name om-tut.core/t30605, :file "src/om_tut/core.cljs", :type true, :anonymous true, :column 3, :line 96, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, add-letter {:protocol-inline nil, :meta {:arglists (quote ([{[x y] :position, text :text, :as state} l])), :end-column 17, :end-line 210, :column 7, :line 210, :file "/Users/cmdrdats/storage/exp/om-tut/src/om_tut/core.cljs"}, :name om-tut.core/add-letter, :variadic false, :file "src/om_tut/core.cljs", :end-column 17, :method-params ([p__30641 l]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 210, :end-line 210, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{[x y] :position, text :text, :as state} l])), :test true}, app-state {:meta {:end-column 12, :end-line 45, :column 3, :line 45, :file "/Users/cmdrdats/storage/exp/om-tut/src/om_tut/core.cljs"}, :file "src/om_tut/core.cljs", :line 44, :column 1, :end-line 45, :end-column 12, :test true, :name om-tut.core/app-state}, bound {:protocol-inline nil, :meta {:arglists (quote ([low x high])), :end-column 12, :end-line 200, :column 7, :line 200, :file "/Users/cmdrdats/storage/exp/om-tut/src/om_tut/core.cljs"}, :name om-tut.core/bound, :variadic false, :file "src/om_tut/core.cljs", :end-column 12, :method-params ([low x high]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 200, :end-line 200, :max-fixed-arity 3, :fn-var true, :arglists (quote ([low x high])), :test true}, resized {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 14, :end-line 268, :column 7, :line 268, :file "/Users/cmdrdats/storage/exp/om-tut/src/om_tut/core.cljs"}, :name om-tut.core/resized, :variadic false, :file "src/om_tut/core.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 268, :end-line 268, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, ->t30605 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([owner data page-view meta30606])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name om-tut.core/->t30605, :variadic false, :file "src/om_tut/core.cljs", :method-params ([owner data page-view meta30606]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 96, :max-fixed-arity 4, :fn-var true, :arglists (quote ([owner data page-view meta30606])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, block-view {:protocol-inline nil, :meta {:arglists (quote ([block owner])), :end-column 17, :end-line 86, :column 7, :line 86, :file "/Users/cmdrdats/storage/exp/om-tut/src/om_tut/core.cljs"}, :name om-tut.core/block-view, :variadic false, :file "src/om_tut/core.cljs", :end-column 17, :method-params ([block owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 2, :fn-var true, :arglists (quote ([block owner])), :test true}, calculate-cursor {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 23, :end-line 41, :column 7, :line 41, :file "/Users/cmdrdats/storage/exp/om-tut/src/om_tut/core.cljs"}, :name om-tut.core/calculate-cursor, :variadic false, :file "src/om_tut/core.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, ->t30611 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([owner data page-view meta30612])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name om-tut.core/->t30611, :variadic false, :file "src/om_tut/core.cljs", :method-params ([owner data page-view meta30612]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 96, :max-fixed-arity 4, :fn-var true, :arglists (quote ([owner data page-view meta30612])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, on-js-reload {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 19, :end-line 162, :column 7, :line 162, :file "/Users/cmdrdats/storage/exp/om-tut/src/om_tut/core.cljs"}, :name om-tut.core/on-js-reload, :variadic false, :file "src/om_tut/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 162, :end-line 162, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, t30602 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name om-tut.core/t30602, :file "src/om_tut/core.cljs", :type true, :anonymous true, :column 3, :line 87, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, register-stuff {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 21, :end-line 271, :column 7, :line 271, :file "/Users/cmdrdats/storage/exp/om-tut/src/om_tut/core.cljs"}, :name om-tut.core/register-stuff, :variadic false, :file "src/om_tut/core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 271, :end-line 271, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, ->t30617 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([owner data copy-button meta30618])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name om-tut.core/->t30617, :variadic false, :file "src/om_tut/core.cljs", :method-params ([owner data copy-button meta30618]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 115, :max-fixed-arity 4, :fn-var true, :arglists (quote ([owner data copy-button meta30618])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, rgen {:meta {:end-column 10, :end-line 57, :column 6, :line 57, :file "/Users/cmdrdats/storage/exp/om-tut/src/om_tut/core.cljs"}, :file "src/om_tut/core.cljs", :line 57, :column 1, :end-line 57, :end-column 10, :test true, :name om-tut.core/rgen}, backspace {:protocol-inline nil, :meta {:arglists (quote ([{:keys [position tab-stop], :as s}])), :end-column 16, :end-line 233, :column 7, :line 233, :file "/Users/cmdrdats/storage/exp/om-tut/src/om_tut/core.cljs"}, :name om-tut.core/backspace, :variadic false, :file "src/om_tut/core.cljs", :end-column 16, :method-params ([p__30651]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 233, :end-line 233, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [position tab-stop], :as s}])), :test true}, ->t30626 {:protocol-inline nil, :meta {:file nil, :arglists (quote ([owner data meta30627])), :factory :positional, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :protocols #{om.core/IRenderState cljs.core/IMeta cljs.core/IWithMeta}, :anonymous true}, :protocols #{om.core/IRenderState cljs.core/IMeta cljs.core/IWithMeta}, :name om-tut.core/->t30626, :variadic false, :file "src/om_tut/core.cljs", :method-params ([owner data meta30627]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 135, :max-fixed-arity 3, :fn-var true, :arglists (quote ([owner data meta30627])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}}, :require-macros {dom om.dom, om.dom om.dom, om.core om.core, om om.core}, :cljs.analyzer/constants {:order [:rand-seed :blocks :position :page-size :cursor :tab-stop :text-visible :text :target :key :return :space :backspace :forward :tab :ding], :seen #{:text-visible :space :key :return :tab-stop :forward :page-size :cursor :ding :rand-seed :blocks :position :backspace :target :tab :text}}, :doc nil}