;; Analyzed by ClojureScript 0.0-3211
{:use-macros nil, :excludes #{boolean long double int float}, :name cemerick.pprng, :imports nil, :requires {lang cljs.core, cljs.core cljs.core, math.seedrandom math.seedrandom}, :uses nil, :defs {SeededRandom {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cemerick.pprng/IRandom cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name cemerick.pprng/SeededRandom, :file "resources/public/js/compiled/out/cemerick/pprng.cljs", :end-column 24, :type true, :column 12, :internal-ctor true, :line 52, :record true, :end-line 52, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, boolean {:protocol-inline nil, :meta {:arglists (quote ([rng])), :doc "Returns the next boolean value from the given RNG.", :end-column 14, :end-line 104, :column 7, :line 104, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/cemerick/pprng.cljs"}, :name cemerick.pprng/boolean, :variadic false, :file "resources/public/js/compiled/out/cemerick/pprng.cljs", :end-column 14, :method-params ([rng]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 104, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rng])), :doc "Returns the next boolean value from the given RNG.", :test true}, map->SeededRandom {:protocol-inline nil, :meta {:arglists (quote ([G__30919])), :factory :map, :internal-ctor true, :end-column 24, :end-line 52, :column 12, :line 52, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/cemerick/pprng.cljs"}, :name cemerick.pprng/map->SeededRandom, :variadic false, :file "resources/public/js/compiled/out/cemerick/pprng.cljs", :end-column 24, :method-params ([G__30919]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 52, :end-line 52, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__30919])), :test true}, rng {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [seed]), :arglists ([] [seed]), :arglists-meta (nil nil)}, :arglists (quote ([] [seed])), :doc "Returns a new random number generator seeded with [seed] that satisfies the\n  `IRandom` protocol.", :end-column 10, :end-line 63, :column 7, :line 63, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/cemerick/pprng.cljs"}, :name cemerick.pprng/rng, :variadic false, :file "resources/public/js/compiled/out/cemerick/pprng.cljs", :end-column 10, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [seed]), :arglists ([] [seed]), :arglists-meta (nil nil)}, :method-params ([] [seed]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 1, :fn-var true, :arglists ([] [seed]), :doc "Returns a new random number generator seeded with [seed] that satisfies the\n  `IRandom` protocol.", :test true}, -next-int {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 2, :method-params ([this] [this limit]), :arglists ([this] [this limit]), :arglists-meta (nil nil)}, :arglists (quote ([this] [this limit])), :doc nil, :protocol cemerick.pprng/IRandom, :end-column 13, :end-line 16, :column 4, :line 16, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/cemerick/pprng.cljs"}, :protocol cemerick.pprng/IRandom, :name cemerick.pprng/-next-int, :variadic false, :file "resources/public/js/compiled/out/cemerick/pprng.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([this] [this limit]), :arglists ([this] [this limit]), :arglists-meta (nil nil)}, :method-params ([this] [this limit]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists ([this] [this limit]), :doc nil, :test true}, -next-float {:protocol-inline nil, :meta {:arglists (quote ([this])), :doc nil, :protocol cemerick.pprng/IRandom, :end-column 15, :end-line 15, :column 4, :line 15, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/cemerick/pprng.cljs"}, :protocol cemerick.pprng/IRandom, :name cemerick.pprng/-next-float, :variadic false, :file "resources/public/js/compiled/out/cemerick/pprng.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil, :test true}, long {:protocol-inline nil, :meta {:arglists (quote ([rng])), :doc "Returns the next long value from the given RNG.", :end-column 11, :end-line 99, :column 7, :line 99, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/cemerick/pprng.cljs"}, :name cemerick.pprng/long, :variadic false, :file "resources/public/js/compiled/out/cemerick/pprng.cljs", :end-column 11, :method-params ([rng]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rng])), :doc "Returns the next long value from the given RNG.", :test true}, double {:protocol-inline nil, :meta {:arglists (quote ([rng])), :doc "Returns the next double value from the given RNG.", :end-column 13, :end-line 84, :column 7, :line 84, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/cemerick/pprng.cljs"}, :name cemerick.pprng/double, :variadic false, :file "resources/public/js/compiled/out/cemerick/pprng.cljs", :end-column 13, :method-params ([rng]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rng])), :doc "Returns the next double value from the given RNG.", :test true}, int {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 2, :method-params ([rng] [rng limit]), :arglists ([rng] [rng limit]), :arglists-meta (nil nil)}, :arglists (quote ([rng] [rng limit])), :doc "Returns the next int value from the given RNG.  If supplied a [limit] argument, the range of the returned int will be [0,limit).", :end-column 10, :end-line 94, :column 7, :line 94, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/cemerick/pprng.cljs"}, :name cemerick.pprng/int, :variadic false, :file "resources/public/js/compiled/out/cemerick/pprng.cljs", :end-column 10, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([rng] [rng limit]), :arglists ([rng] [rng limit]), :arglists-meta (nil nil)}, :method-params ([rng] [rng limit]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 94, :end-line 94, :max-fixed-arity 2, :fn-var true, :arglists ([rng] [rng limit]), :doc "Returns the next int value from the given RNG.  If supplied a [limit] argument, the range of the returned int will be [0,limit).", :test true}, float {:protocol-inline nil, :meta {:arglists (quote ([rng])), :doc "Returns the next float value from the given RNG.", :end-column 12, :end-line 89, :column 7, :line 89, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/cemerick/pprng.cljs"}, :name cemerick.pprng/float, :variadic false, :file "resources/public/js/compiled/out/cemerick/pprng.cljs", :end-column 12, :method-params ([rng]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rng])), :doc "Returns the next float value from the given RNG.", :test true}, -next-boolean {:protocol-inline nil, :meta {:arglists (quote ([this])), :doc nil, :protocol cemerick.pprng/IRandom, :end-column 17, :end-line 18, :column 4, :line 18, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/cemerick/pprng.cljs"}, :protocol cemerick.pprng/IRandom, :name cemerick.pprng/-next-boolean, :variadic false, :file "resources/public/js/compiled/out/cemerick/pprng.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil, :test true}, between {:protocol-inline nil, :meta {:arglists (quote ([random low high])), :private true, :end-column 15, :end-line 47, :column 8, :line 47, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/cemerick/pprng.cljs"}, :private true, :name cemerick.pprng/between, :variadic false, :file "resources/public/js/compiled/out/cemerick/pprng.cljs", :end-column 15, :method-params ([random low high]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 3, :fn-var true, :arglists (quote ([random low high])), :test true}, seed {:protocol-inline nil, :meta {:arglists (quote ([rng])), :doc "Returns the seed used to create the given RNG.", :end-column 11, :end-line 79, :column 7, :line 79, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/cemerick/pprng.cljs"}, :name cemerick.pprng/seed, :variadic false, :file "resources/public/js/compiled/out/cemerick/pprng.cljs", :end-column 11, :method-params ([rng]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rng])), :doc "Returns the seed used to create the given RNG.", :test true}, -next-long {:protocol-inline nil, :meta {:arglists (quote ([this])), :doc nil, :protocol cemerick.pprng/IRandom, :end-column 14, :end-line 17, :column 4, :line 17, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/cemerick/pprng.cljs"}, :protocol cemerick.pprng/IRandom, :name cemerick.pprng/-next-long, :variadic false, :file "resources/public/js/compiled/out/cemerick/pprng.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil, :test true}, -next-double {:protocol-inline nil, :meta {:arglists (quote ([this])), :doc nil, :protocol cemerick.pprng/IRandom, :end-column 16, :end-line 14, :column 4, :line 14, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/cemerick/pprng.cljs"}, :protocol cemerick.pprng/IRandom, :name cemerick.pprng/-next-double, :variadic false, :file "resources/public/js/compiled/out/cemerick/pprng.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil, :test true}, -seed {:protocol-inline nil, :meta {:arglists (quote ([this])), :doc nil, :protocol cemerick.pprng/IRandom, :end-column 9, :end-line 13, :column 4, :line 13, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/cemerick/pprng.cljs"}, :protocol cemerick.pprng/IRandom, :name cemerick.pprng/-seed, :variadic false, :file "resources/public/js/compiled/out/cemerick/pprng.cljs", :end-column 9, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil, :test true}, IRandom {:meta {:protocol-info {:methods {-seed [[this]], -next-double [[this]], -next-float [[this]], -next-int [[this] [this limit]], -next-long [[this]], -next-boolean [[this]]}}, :protocol-symbol true, :doc nil, :end-column 21, :end-line 12, :column 14, :line 12, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/cemerick/pprng.cljs"}, :protocol-symbol true, :name cemerick.pprng/IRandom, :file "resources/public/js/compiled/out/cemerick/pprng.cljs", :end-column 21, :column 1, :line 12, :protocol-info {:methods {-seed [[this]], -next-double [[this]], -next-float [[this]], -next-int [[this] [this limit]], -next-long [[this]], -next-boolean [[this]]}}, :info nil, :end-line 12, :impls #{cemerick.pprng/SeededRandom}, :doc nil, :test true}, ->SeededRandom {:protocol-inline nil, :meta {:arglists (quote ([seed random-double])), :factory :positional, :internal-ctor true, :end-column 24, :end-line 52, :column 12, :line 52, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/cemerick/pprng.cljs"}, :name cemerick.pprng/->SeededRandom, :variadic false, :file "resources/public/js/compiled/out/cemerick/pprng.cljs", :end-column 24, :method-params ([seed random-double]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 52, :end-line 52, :max-fixed-arity 2, :fn-var true, :arglists (quote ([seed random-double])), :test true}}, :require-macros nil, :cljs.analyzer/constants {:order [:seed :random-double], :seen #{:seed :random-double}}, :doc nil}