;; Analyzed by ClojureScript 0.0-3211
{:use-macros {go cljs.core.async.macros, dev-assert figwheel.client.utils, go-loop cljs.core.async.macros}, :excludes #{}, :name figwheel.client.file-reloading, :imports {}, :requires {guri goog.Uri, goog.string goog.string, loader goog.net.jsloader, async cljs.core.async, goog.net.jsloader goog.net.jsloader, goog.Uri goog.Uri, cljs.core.async cljs.core.async, clojure.set clojure.set, string clojure.string, figwheel.client.utils figwheel.client.utils, utils figwheel.client.utils, clojure.string clojure.string}, :uses {timeout cljs.core.async, <! cljs.core.async, close! cljs.core.async, chan cljs.core.async, alts! cljs.core.async, difference clojure.set, map< cljs.core.async, put! cljs.core.async}, :defs {add-link-to-doc {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 2, :method-params ([new-link] [orig-link klone]), :arglists ([new-link] [orig-link klone]), :arglists-meta (nil nil)}, :arglists (quote ([new-link] [orig-link klone])), :end-column 22, :end-line 280, :column 7, :line 280, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/add-link-to-doc, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 22, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([new-link] [orig-link klone]), :arglists ([new-link] [orig-link klone]), :arglists-meta (nil nil)}, :method-params ([new-link] [orig-link klone]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 280, :end-line 280, :max-fixed-arity 2, :fn-var true, :arglists ([new-link] [orig-link klone]), :test true}, matches-file? {:protocol-inline nil, :meta {:arglists (quote ([{:keys [file]} link])), :end-column 20, :end-line 241, :column 7, :line 241, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/matches-file?, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 20, :method-params ([p__33172 link]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 241, :end-line 241, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [file]} link])), :test true}, add-request-urls {:protocol-inline nil, :meta {:arglists (quote ([opts files])), :end-column 23, :end-line 163, :column 7, :line 163, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/add-request-urls, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 23, :method-params ([opts files]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 163, :end-line 163, :max-fixed-arity 2, :fn-var true, :arglists (quote ([opts files])), :test true}, namespace-file-map? {:protocol-inline nil, :meta {:arglists (quote ([m])), :end-column 26, :end-line 19, :column 7, :line 19, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/namespace-file-map?, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 26, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m])), :test true}, current-links {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 20, :end-line 230, :column 7, :line 230, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/current-links, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 230, :end-line 230, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, reload-css-files {:protocol-inline nil, :meta {:arglists (quote ([{:keys [on-cssload], :as opts} files-msg])), :end-column 23, :end-line 296, :column 7, :line 296, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/reload-css-files, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 23, :method-params ([p__33186 files-msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 296, :end-line 296, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [on-cssload], :as opts} files-msg])), :test true}, add-cache-buster {:protocol-inline nil, :meta {:arglists (quote ([url])), :end-column 23, :end-line 31, :column 7, :line 31, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/add-cache-buster, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 23, :method-params ([url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([url])), :test true}, get-correct-link {:protocol-inline nil, :meta {:arglists (quote ([f-data])), :end-column 23, :end-line 257, :column 7, :line 257, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/get-correct-link, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 23, :method-params ([f-data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 257, :end-line 257, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f-data])), :test true}, all? {:protocol-inline nil, :meta {:arglists (quote ([pred coll])), :end-column 11, :end-line 16, :column 7, :line 16, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/all?, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 11, :method-params ([pred coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred coll])), :test true}, js-reload {:protocol-inline nil, :meta {:arglists (quote ([{:keys [request-url namespace], :as file-msg} callback])), :end-column 16, :end-line 127, :column 7, :line 127, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/js-reload, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 16, :method-params ([p__32607 callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 127, :end-line 127, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [request-url namespace], :as file-msg} callback])), :test true}, truncate-url {:protocol-inline nil, :meta {:arglists (quote ([url])), :end-column 19, :end-line 234, :column 7, :line 234, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/truncate-url, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 19, :method-params ([url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 234, :end-line 234, :max-fixed-arity 1, :fn-var true, :arglists (quote ([url])), :test true}, ns-to-js-file {:protocol-inline nil, :meta {:arglists (quote ([ns])), :end-column 20, :end-line 35, :column 7, :line 35, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/ns-to-js-file, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 20, :method-params ([ns]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ns])), :test true}, clone-link {:protocol-inline nil, :meta {:arglists (quote ([link url])), :end-column 17, :end-line 266, :column 7, :line 266, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/clone-link, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 17, :method-params ([link url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 266, :end-line 266, :max-fixed-arity 2, :fn-var true, :arglists (quote ([link url])), :test true}, add-request-url {:protocol-inline nil, :meta {:arglists (quote ([{:keys [url-rewriter], :as opts} {:keys [file], :as file-msg}])), :end-column 22, :end-line 156, :column 7, :line 156, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/add-request-url, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 22, :method-params ([p__32705 p__32706]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 156, :end-line 156, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [url-rewriter], :as opts} {:keys [file], :as file-msg}])), :test true}, reload-base {:meta {:end-column 22, :end-line 72, :column 11, :line 72, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :line 72, :column 1, :end-line 72, :end-column 22, :test true, :name figwheel.client.file-reloading/reload-base}, patch-goog-base {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 22, :end-line 45, :column 7, :line 45, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/patch-goog-base, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, reload-file? {:protocol-inline nil, :meta {:arglists (quote ([{:keys [namespace meta-data], :as file-msg}])), :end-column 19, :end-line 112, :column 7, :line 112, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/reload-file?, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 19, :method-params ([p__32604]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 112, :end-line 112, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [namespace meta-data], :as file-msg}])), :test true}, reload-css-file {:protocol-inline nil, :meta {:arglists (quote ([{:keys [file request-url], :as f-data}])), :end-column 22, :end-line 291, :column 7, :line 291, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/reload-css-file, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 22, :method-params ([p__33183]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 291, :end-line 291, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [file request-url], :as f-data}])), :test true}, resolve-url {:meta {:end-column 22, :end-line 64, :column 11, :line 64, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :line 64, :column 1, :end-line 64, :end-column 22, :test true, :name figwheel.client.file-reloading/resolve-url}, resolve-ns {:protocol-inline nil, :meta {:arglists (quote ([ns])), :end-column 17, :end-line 39, :column 7, :line 39, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/resolve-ns, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 17, :method-params ([ns]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ns])), :test true}, reload-js-file {:protocol-inline nil, :meta {:arglists (quote ([file-msg])), :end-column 21, :end-line 135, :column 7, :line 135, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/reload-js-file, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 21, :method-params ([file-msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 135, :end-line 135, :max-fixed-arity 1, :fn-var true, :arglists (quote ([file-msg])), :test true}, eval-body {:protocol-inline nil, :meta {:arglists (quote ([{:keys [eval-body file]}])), :end-column 16, :end-line 166, :column 7, :line 166, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/eval-body, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 16, :method-params ([p__32711]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 166, :end-line 166, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [eval-body file]}])), :test true}, load-all-js-files {:protocol-inline nil, :meta {:arglists (quote ([files])), :doc "Returns a chanel with one collection of loaded filenames on it.", :end-column 24, :end-line 143, :column 7, :line 143, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/load-all-js-files, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 24, :method-params ([files]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 143, :end-line 143, :max-fixed-arity 1, :fn-var true, :arglists (quote ([files])), :doc "Returns a chanel with one collection of loaded filenames on it.", :test true}, reload-file* {:protocol-inline nil, :meta {:top-fn {:variadic false, :max-fixed-arity 2, :method-params ([request-url callback] [request-url]), :arglists ([request-url callback] [request-url]), :arglists-meta (nil nil)}, :arglists (quote ([request-url callback] [request-url])), :end-column 19, :end-line 93, :column 7, :line 93, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/reload-file*, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([request-url callback] [request-url]), :arglists ([request-url callback] [request-url]), :arglists-meta (nil nil)}, :method-params ([request-url callback] [request-url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 93, :end-line 93, :max-fixed-arity 2, :fn-var true, :arglists ([request-url callback] [request-url]), :test true}, create-link {:protocol-inline nil, :meta {:arglists (quote ([url])), :end-column 18, :end-line 274, :column 7, :line 274, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/create-link, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 18, :method-params ([url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 274, :end-line 274, :max-fixed-arity 1, :fn-var true, :arglists (quote ([url])), :test true}, reload-js-files {:protocol-inline nil, :meta {:arglists (quote ([{:keys [before-jsload on-jsload load-unchanged-files], :as opts} {:keys [files], :as msg}])), :end-column 22, :end-line 175, :column 7, :line 175, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/reload-js-files, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 22, :method-params ([p__32720 p__32721]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 175, :end-line 175, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [before-jsload on-jsload load-unchanged-files], :as opts} {:keys [files], :as msg}])), :test true}, reload-file {:protocol-inline nil, :meta {:arglists (quote ([{:keys [request-url], :as file-msg} callback])), :end-column 18, :end-line 97, :column 7, :line 97, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/file_reloading.cljs"}, :name figwheel.client.file-reloading/reload-file, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/file_reloading.cljs", :end-column 18, :method-params ([p__32601 callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [request-url], :as file-msg} callback])), :test true}}, :require-macros {utils figwheel.client.utils, figwheel.client.utils figwheel.client.utils, cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:order [:namespace :file :type :hierarchy :default :node :error :else :html :request-url :loaded-file :meta-data :figwheel-no-load :figwheel-always :figwheel-load :file-changed-on-disk :recur :url-rewriter :eval-body :load-unchanged-files :on-jsload :before-jsload :files :debug :not-required :link :link-href :match-length :current-url-length :on-cssload], :seen #{:load-unchanged-files :request-url :else :on-jsload :default :file :meta-data :figwheel-always :recur :type :debug :figwheel-no-load :node :loaded-file :current-url-length :link :eval-body :files :not-required :figwheel-load :before-jsload :error :hierarchy :namespace :file-changed-on-disk :match-length :link-href :url-rewriter :on-cssload :html}}, :doc nil}