;; Analyzed by ClojureScript 0.0-3211
{:use-macros {go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name figwheel.client.heads-up, :imports nil, :requires {async cljs.core.async, cljs.core.async cljs.core.async, socket figwheel.client.socket, figwheel.client.socket figwheel.client.socket, clojure.string clojure.string, string clojure.string}, :uses {timeout cljs.core.async, <! cljs.core.async, close! cljs.core.async, chan cljs.core.async, alts! cljs.core.async, map< cljs.core.async, put! cljs.core.async}, :defs {get-content {:protocol-inline nil, :meta {:arglists (quote ([{:keys [content-area-el]}])), :end-column 18, :end-line 84, :column 7, :line 84, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/get-content, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/heads_up.cljs", :end-column 18, :method-params ([p__32348]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [content-area-el]}])), :test true}, file-and-line-number {:protocol-inline nil, :meta {:arglists (quote ([msg])), :end-column 27, :end-line 124, :column 7, :line 124, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/file-and-line-number, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/heads_up.cljs", :end-column 27, :method-params ([msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 124, :end-line 124, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg])), :test true}, set-style! {:protocol-inline nil, :meta {:arglists (quote ([{:keys [container-el]} st-map])), :end-column 17, :end-line 75, :column 7, :line 75, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/set-style!, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/heads_up.cljs", :end-column 17, :method-params ([p__32338 st-map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [container-el]} st-map])), :test true}, heading {:protocol-inline nil, :meta {:arglists (quote ([s])), :end-column 14, :end-line 115, :column 7, :line 115, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/heading, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/heads_up.cljs", :end-column 14, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :test true}, clear {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 12, :end-line 169, :column 7, :line 169, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/clear, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/heads_up.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 169, :end-line 169, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, get-dataset {:protocol-inline nil, :meta {:arglists (quote ([el])), :end-column 18, :end-line 31, :column 7, :line 31, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/get-dataset, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/heads_up.cljs", :end-column 18, :method-params ([el]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([el])), :test true}, display-heads-up {:protocol-inline nil, :meta {:arglists (quote ([style msg])), :end-column 23, :end-line 100, :column 7, :line 100, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/display-heads-up, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/heads_up.cljs", :end-column 23, :method-params ([style msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 2, :fn-var true, :arglists (quote ([style msg])), :test true}, display-error {:protocol-inline nil, :meta {:arglists (quote ([formatted-messages cause])), :end-column 20, :end-line 138, :column 7, :line 138, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/display-error, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/heads_up.cljs", :end-column 20, :method-params ([formatted-messages cause]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 138, :end-line 138, :max-fixed-arity 2, :fn-var true, :arglists (quote ([formatted-messages cause])), :test true}, format-line {:protocol-inline nil, :meta {:arglists (quote ([msg])), :end-column 18, :end-line 133, :column 7, :line 133, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/format-line, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/heads_up.cljs", :end-column 18, :method-params ([msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 133, :end-line 133, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg])), :test true}, heads-up-event-dispatch {:meta {:end-column 34, :end-line 18, :column 11, :line 18, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/heads_up.cljs"}, :file "resources/public/js/compiled/out/figwheel/client/heads_up.cljs", :line 18, :column 1, :end-line 18, :end-column 34, :test true, :name figwheel.client.heads-up/heads-up-event-dispatch}, heads-up-onclick-handler {:protocol-inline nil, :meta {:arglists (quote ([event])), :end-column 31, :end-line 35, :column 7, :line 35, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/heads-up-onclick-handler, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/heads_up.cljs", :end-column 31, :method-params ([event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists (quote ([event])), :test true}, append-message {:protocol-inline nil, :meta {:arglists (quote ([message])), :end-column 21, :end-line 163, :column 7, :line 163, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/append-message, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/heads_up.cljs", :end-column 21, :method-params ([message]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 163, :end-line 163, :max-fixed-arity 1, :fn-var true, :arglists (quote ([message])), :test true}, set-content! {:protocol-inline nil, :meta {:arglists (quote ([{:keys [content-area-el], :as c} dom-str])), :end-column 19, :end-line 81, :column 7, :line 81, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/set-content!, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/heads_up.cljs", :end-column 19, :method-params ([p__32345 dom-str]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [content-area-el], :as c} dom-str])), :test true}, display-warning {:protocol-inline nil, :meta {:arglists (quote ([msg])), :end-column 22, :end-line 160, :column 7, :line 160, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/display-warning, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/heads_up.cljs", :end-column 22, :method-params ([msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 160, :end-line 160, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg])), :test true}, file-selector-div {:protocol-inline nil, :meta {:arglists (quote ([file-name line-number msg])), :end-column 24, :end-line 128, :column 7, :line 128, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/file-selector-div, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/heads_up.cljs", :end-column 24, :method-params ([file-name line-number msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 128, :end-line 128, :max-fixed-arity 3, :fn-var true, :arglists (quote ([file-name line-number msg])), :test true}, display-loaded-start {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 27, :end-line 183, :column 7, :line 183, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/display-loaded-start, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/heads_up.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 183, :end-line 183, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, ensure-container {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 23, :end-line 41, :column 7, :line 41, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/ensure-container, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/heads_up.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, clojure-symbol-svg {:meta {:end-column 24, :end-line 197, :column 6, :line 197, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/heads_up.cljs"}, :file "resources/public/js/compiled/out/figwheel/client/heads_up.cljs", :line 197, :column 1, :end-line 197, :end-column 24, :test true, :name figwheel.client.heads-up/clojure-symbol-svg}, node {:protocol-inline nil, :meta {:top-fn {:variadic true, :max-fixed-arity 2, :method-params [(t attrs children)], :arglists [[t attrs & children]], :arglists-meta (nil)}, :arglists (quote ([t attrs & children])), :end-column 11, :end-line 12, :column 7, :line 12, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/node, :variadic true, :file "resources/public/js/compiled/out/figwheel/client/heads_up.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(t attrs children)], :arglists [[t attrs & children]], :arglists-meta (nil)}, :method-params [(t attrs children)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 2, :fn-var true, :arglists [[t attrs & children]], :test true}, display-system-warning {:protocol-inline nil, :meta {:arglists (quote ([header msg])), :end-column 29, :end-line 156, :column 7, :line 156, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/display-system-warning, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/heads_up.cljs", :end-column 29, :method-params ([header msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 156, :end-line 156, :max-fixed-arity 2, :fn-var true, :arglists (quote ([header msg])), :test true}, close-link {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 17, :end-line 87, :column 7, :line 87, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/close-link, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/heads_up.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 87, :end-line 87, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, ancestor-nodes {:protocol-inline nil, :meta {:arglists (quote ([el])), :end-column 21, :end-line 28, :column 7, :line 28, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/ancestor-nodes, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/heads_up.cljs", :end-column 21, :method-params ([el]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([el])), :test true}, flash-loaded {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 19, :end-line 191, :column 7, :line 191, :file "/Users/cmdrdats/storage/exp/om-tut/resources/public/js/compiled/out/figwheel/client/heads_up.cljs"}, :name figwheel.client.heads-up/flash-loaded, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/heads_up.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 191, :end-line 191, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:order [:hierarchy :default :figwheel-event :file-name :file-line :div :id :style :container-el :content-area-el :height :paddingTop :paddingBottom :width :minHeight :opacity :recur :else :file :line :column :backgroundColor :padding :borderRadius :paddingLeft :paddingRight], :seen #{:figwheel-event :content-area-el :borderRadius :else :paddingBottom :paddingTop :default :paddingRight :file :width :recur :paddingLeft :container-el :column :style :div :line :opacity :id :padding :file-name :hierarchy :backgroundColor :minHeight :file-line :height}}, :doc nil}